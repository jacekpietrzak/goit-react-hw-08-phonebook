{"version":3,"file":"static/js/602.3126baa6.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Contact/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"section\":\"ContactForm_section__Yogoh\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addContact,\n  selectContacts,\n} from '../../redux/phonebook/contactsSlice';\n\nimport css from './ContactForm.module.css';\n\nimport { Button, TextField } from '@mui/material';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const inputNameRef = useRef(null);\n  const inputNumberRef = useRef(null);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleAddContact();\n  };\n\n  const handleAddContact = () => {\n    const contactName = inputNameRef.current.value;\n    const contactNumber = inputNumberRef.current.value;\n\n    const newContact = {\n      name: contactName,\n      number: contactNumber,\n    };\n\n    const checkName = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (checkName !== undefined) {\n      return alert(`${checkName.name} is already in contacts.`);\n    }\n\n    dispatch(addContact(newContact));\n    inputNameRef.current.value = '';\n    inputNumberRef.current.value = '';\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <section className={css.section}>\n        <TextField\n          required\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          inputRef={inputNameRef}\n        />\n      </section>\n      <section className={css.section}>\n        <TextField\n          required\n          id=\"tel\"\n          type=\"tel\"\n          name=\"number\"\n          label=\"Phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          inputRef={inputNumberRef}\n        />\n      </section>\n      <Button variant=\"contained\" type=\"submit\">\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useRef } from 'react';\nimport { setStatusFilter } from '../../redux/phonebook/filterSlice';\nimport { selectFilter } from 'redux/phonebook/filterSlice';\n\nimport css from './Filter.module.css';\n\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterInputRef = useRef(null);\n  const filter = useSelector(selectFilter);\n  const filterStatus = filter.status;\n\n  const handleFilter = () => {\n    const filter = filterInputRef.current.value.toLowerCase();\n    dispatch(setStatusFilter(filter));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label className={css.label} htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n      <TextField\n        id=\"filter\"\n        type=\"text\"\n        label=\"type to filter\"\n        name=\"filter\"\n        value={filterStatus}\n        onChange={handleFilter}\n        inputRef={filterInputRef}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useDispatch } from 'react-redux';\nimport { removeContact } from '../../redux/phonebook/contactsSlice';\n\n// import css from './ContactListItem.module.css';\nimport PropTypes from 'prop-types';\n\nimport {\n  IconButton,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleRemoveContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  return (\n    <ListItem disablePadding>\n      <ListItemButton>\n        <ListItemText primary={`${contact.name}: ${contact.number}`} />\n        <IconButton\n          aria-label=\"delete\"\n          type=\"button\"\n          variant=\"contained\"\n          color=\"error\"\n          size=\"small\"\n          id={contact.id}\n          onClick={() => handleRemoveContact(contact.id)}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </ListItemButton>\n    </ListItem>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Contact;\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/phonebook/contactsSlice';\nimport { selectFilter } from 'redux/phonebook/filterSlice';\n\nimport ContactListItem from '../Contact/ContactListItem';\n\nimport { List } from '@mui/material';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const filterStatus = filter.status;\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterStatus)\n  );\n\n  return (\n    <List>\n      {filteredContacts.map(contact => {\n        return <ContactListItem contact={contact} key={contact.id} />;\n      })}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  fetchContacts,\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from '../redux/phonebook/contactsSlice';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\n\nexport default function PhonebookPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      {contacts.length === 0 && !isLoading && <div>No contacts to show</div>}\n      {contacts.length > 0 && <ContactList />}\n    </>\n  );\n}\n"],"names":["contacts","useSelector","selectContacts","inputNameRef","useRef","inputNumberRef","dispatch","useDispatch","handleAddContact","newContact","name","current","value","number","checkName","find","contact","toLowerCase","undefined","alert","addContact","className","css","onSubmit","event","preventDefault","TextField","required","type","id","label","pattern","title","inputRef","Button","variant","filterInputRef","filterStatus","selectFilter","status","htmlFor","onChange","filter","setStatusFilter","ListItem","disablePadding","ListItemButton","ListItemText","primary","IconButton","color","size","onClick","removeContact","Delete","filteredContacts","includes","List","map","ContactListItem","PhonebookPage","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","length"],"sourceRoot":""}